/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package backtoqueen;

import java.util.Scanner;
import java.util.Arrays;

public class BackToQueen {	
	static int count = 0;
	static String queensConf = "[0, 1, 5, 8, 6, 3, 7, 2, 4]\n" +
"[0, 1, 6, 8, 3, 7, 4, 2, 5]\n" +
"[0, 1, 7, 4, 6, 8, 2, 5, 3]\n" +
"[0, 1, 7, 5, 8, 2, 4, 6, 3]\n" +
"[0, 2, 4, 6, 8, 3, 1, 7, 5]\n" +
"[0, 2, 5, 7, 1, 3, 8, 6, 4]\n" +
"[0, 2, 5, 7, 4, 1, 8, 6, 3]\n" +
"[0, 2, 6, 1, 7, 4, 8, 3, 5]\n" +
"[0, 2, 6, 8, 3, 1, 4, 7, 5]\n" +
"[0, 2, 7, 3, 6, 8, 5, 1, 4]\n" +
"[0, 2, 7, 5, 8, 1, 4, 6, 3]\n" +
"[0, 2, 8, 6, 1, 3, 5, 7, 4]\n" +
"[0, 3, 1, 7, 5, 8, 2, 4, 6]\n" +
"[0, 3, 5, 2, 8, 1, 7, 4, 6]\n" +
"[0, 3, 5, 2, 8, 6, 4, 7, 1]\n" +
"[0, 3, 5, 7, 1, 4, 2, 8, 6]\n" +
"[0, 3, 5, 8, 4, 1, 7, 2, 6]\n" +
"[0, 3, 6, 2, 5, 8, 1, 7, 4]\n" +
"[0, 3, 6, 2, 7, 1, 4, 8, 5]\n" +
"[0, 3, 6, 2, 7, 5, 1, 8, 4]\n" +
"[0, 3, 6, 4, 1, 8, 5, 7, 2]\n" +
"[0, 3, 6, 4, 2, 8, 5, 7, 1]\n" +
"[0, 3, 6, 8, 1, 4, 7, 5, 2]\n" +
"[0, 3, 6, 8, 1, 5, 7, 2, 4]\n" +
"[0, 3, 6, 8, 2, 4, 1, 7, 5]\n" +
"[0, 3, 7, 2, 8, 5, 1, 4, 6]\n" +
"[0, 3, 7, 2, 8, 6, 4, 1, 5]\n" +
"[0, 3, 8, 4, 7, 1, 6, 2, 5]\n" +
"[0, 4, 1, 5, 8, 2, 7, 3, 6]\n" +
"[0, 4, 1, 5, 8, 6, 3, 7, 2]\n" +
"[0, 4, 2, 5, 8, 6, 1, 3, 7]\n" +
"[0, 4, 2, 7, 3, 6, 8, 1, 5]\n" +
"[0, 4, 2, 7, 3, 6, 8, 5, 1]\n" +
"[0, 4, 2, 7, 5, 1, 8, 6, 3]\n" +
"[0, 4, 2, 8, 5, 7, 1, 3, 6]\n" +
"[0, 4, 2, 8, 6, 1, 3, 5, 7]\n" +
"[0, 4, 6, 1, 5, 2, 8, 3, 7]\n" +
"[0, 4, 6, 8, 2, 7, 1, 3, 5]\n" +
"[0, 4, 6, 8, 3, 1, 7, 5, 2]\n" +
"[0, 4, 7, 1, 8, 5, 2, 6, 3]\n" +
"[0, 4, 7, 3, 8, 2, 5, 1, 6]\n" +
"[0, 4, 7, 5, 2, 6, 1, 3, 8]\n" +
"[0, 4, 7, 5, 3, 1, 6, 8, 2]\n" +
"[0, 4, 8, 1, 3, 6, 2, 7, 5]\n" +
"[0, 4, 8, 1, 5, 7, 2, 6, 3]\n" +
"[0, 4, 8, 5, 3, 1, 7, 2, 6]\n" +
"[0, 5, 1, 4, 6, 8, 2, 7, 3]\n" +
"[0, 5, 1, 8, 4, 2, 7, 3, 6]\n" +
"[0, 5, 1, 8, 6, 3, 7, 2, 4]\n" +
"[0, 5, 2, 4, 6, 8, 3, 1, 7]\n" +
"[0, 5, 2, 4, 7, 3, 8, 6, 1]\n" +
"[0, 5, 2, 6, 1, 7, 4, 8, 3]\n" +
"[0, 5, 2, 8, 1, 4, 7, 3, 6]\n" +
"[0, 5, 3, 1, 6, 8, 2, 4, 7]\n" +
"[0, 5, 3, 1, 7, 2, 8, 6, 4]\n" +
"[0, 5, 3, 8, 4, 7, 1, 6, 2]\n" +
"[0, 5, 7, 1, 3, 8, 6, 4, 2]\n" +
"[0, 5, 7, 1, 4, 2, 8, 6, 3]\n" +
"[0, 5, 7, 2, 4, 8, 1, 3, 6]\n" +
"[0, 5, 7, 2, 6, 3, 1, 4, 8]\n" +
"[0, 5, 7, 2, 6, 3, 1, 8, 4]\n" +
"[0, 5, 7, 4, 1, 3, 8, 6, 2]\n" +
"[0, 5, 8, 4, 1, 3, 6, 2, 7]\n" +
"[0, 5, 8, 4, 1, 7, 2, 6, 3]\n" +
"[0, 6, 1, 5, 2, 8, 3, 7, 4]\n" +
"[0, 6, 2, 7, 1, 3, 5, 8, 4]\n" +
"[0, 6, 2, 7, 1, 4, 8, 5, 3]\n" +
"[0, 6, 3, 1, 7, 5, 8, 2, 4]\n" +
"[0, 6, 3, 1, 8, 4, 2, 7, 5]\n" +
"[0, 6, 3, 1, 8, 5, 2, 4, 7]\n" +
"[0, 6, 3, 5, 7, 1, 4, 2, 8]\n" +
"[0, 6, 3, 5, 8, 1, 4, 2, 7]\n" +
"[0, 6, 3, 7, 2, 4, 8, 1, 5]\n" +
"[0, 6, 3, 7, 2, 8, 5, 1, 4]\n" +
"[0, 6, 3, 7, 4, 1, 8, 2, 5]\n" +
"[0, 6, 4, 1, 5, 8, 2, 7, 3]\n" +
"[0, 6, 4, 2, 8, 5, 7, 1, 3]\n" +
"[0, 6, 4, 7, 1, 3, 5, 2, 8]\n" +
"[0, 6, 4, 7, 1, 8, 2, 5, 3]\n" +
"[0, 6, 8, 2, 4, 1, 7, 5, 3]\n" +
"[0, 7, 1, 3, 8, 6, 4, 2, 5]\n" +
"[0, 7, 2, 4, 1, 8, 5, 3, 6]\n" +
"[0, 7, 2, 6, 3, 1, 4, 8, 5]\n" +
"[0, 7, 3, 1, 6, 8, 5, 2, 4]\n" +
"[0, 7, 3, 8, 2, 5, 1, 6, 4]\n" +
"[0, 7, 4, 2, 5, 8, 1, 3, 6]\n" +
"[0, 7, 4, 2, 8, 6, 1, 3, 5]\n" +
"[0, 7, 5, 3, 1, 6, 8, 2, 4]\n" +
"[0, 8, 2, 4, 1, 7, 5, 3, 6]\n" +
"[0, 8, 2, 5, 3, 1, 7, 4, 6]\n" +
"[0, 8, 3, 1, 6, 2, 5, 7, 4]\n" +
"[0, 8, 4, 1, 3, 6, 2, 7, 5]";
	public static void main(String[] args) {
            queensConf = queensConf.replaceAll("\\[", "").replaceAll("\\]", "");
            int diff = 0;
            int dist = Integer.MAX_VALUE;
            int[] orig = new int[8];
            Scanner scan = new Scanner(System.in);
            int x = 1;
            try{
                while(scan.hasNext()){
                        for(int i = 0; i<8; i++){
                             orig[i] = scan.nextInt();
                        } 
//                        System.out.println(Arrays.toString(orig));

                        int[][] confs = getDoubleArray(queensConf);
                        for(int i = 0; i<92; i++){
                            for(int j = 0; j<8; j++){
                                int temp = Math.abs(confs[i][j] - orig[j]);
                                if(temp!=0)
                                    diff += 1;
//                              System.out.println(j + "  ");
                            }    
//                            System.out.println(Arrays.toString(confs[i]) + "  DIFF : " + diff);
                            dist = Math.min(diff, dist);
                            diff = 0;
                        }
                        
                        System.out.println("Case " + x++ + ": " + dist);
                        dist = Integer.MAX_VALUE;
                }
            }catch(Exception e){
//                System.out.println(e);
                        
            }
            

            //System.out.println(Arrays.deepToString(getDoubleArray(queensConf)));
            
	}
        
        static int[][] getDoubleArray(String array)
        {
        
            String[] temp = array.split("\n");
            
            int[][] temp2 = new int[92][8];
            for (int i = 0; i < temp.length; i++)
                for (int j = 0; j < 8; j++)
                    temp2[i][j] = Integer.parseInt(temp[i].split(", ")[j + 1]);
            
            
            return temp2;
            
        }

}